<style>
/* Added body styling to fix black page issue */

/* Adding comprehensive CSS styles and 100px top padding */
.product-container {
  padding-top: 150px;
  max-width: 1400px;
  margin: 0 auto;
  padding-left: 20px;
  padding-right: 20px;
  font-family: Arial, sans-serif;
}

.product-layout {
  display: flex;
  gap: 60px;
  align-items: flex-start;
}

.product-images {
  flex: 1;
  max-width: 600px;
}

.carousel {
  position: relative;
  overflow: hidden;
  background: #f8f8f8;
  /* Added sticky positioning to carousel */
  position: sticky;
  top: 20px;
}

.carousel-track {
  display: flex;
  transition: transform 0.3s ease;
}

.carousel-slide {
  min-width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.carousel-slide img {
  width: 100%;
  height: auto;
  max-height: 700px;
  object-fit: contain;
}

.carousel-indicators {
  display: flex;
  justify-content: center;
  gap: 8px;
  margin-top: 20px;
}

.carousel-indicators div {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: #ccc;
  cursor: pointer;
  transition: background 0.2s;
}

.carousel-indicators div.active {
  background: #000;
}

.product-details {
  flex: 1;
  max-width: 500px;
}

.product-title {
  font-size: 15px;
  font-weight: black;
  letter-spacing: -0.5px;
  margin: 0 0 0px 0;
  text-transform: uppercase;
}

.product-price {
  font-size: 12px;
  margin: 0 0 30px 0;
  font-weight: normal;
}

.product-color {
  margin-bottom: 30px;
}

.color-label {
  display: block;
  font-size: 14px;
  font-weight: bold;
  letter-spacing: 1px;
  margin-bottom: 5px;
}

.color-value {
  font-size: 14px;
  color: #666;
}

.size-selector {
  margin-bottom: 30px;
}

.size-selector label {
  display: block;
  font-size: 11px;
  font-weight: bold;
  letter-spacing: 1px;
  margin-bottom: 10px;
}

/* Added toggle button styling to replace dropdown */
.size-buttons {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  margin-bottom: 10px;
}

.size-button {
  padding: 10px 16px;
  border: 1px solid #000;
  background: white;
  color: #000;
  font-size: 12px;
  font-weight: bold;
  letter-spacing: 1px;
  cursor: pointer;
  transition: all 0.2s ease;
  min-width: 60px;
  text-align: center;
}

.size-button:hover {
  background: #f0f0f0;
}

.size-button.active {
  background: #000000;
  color: white;
}

.size-button:disabled {
  background: #f5f5f5;
  color: #ccc;
  border-color: #ddd;
  cursor: not-allowed;
}

.size-guide {
  display: inline-block;
  font-size: 11px;
  font-weight: bold;
  letter-spacing: 1px;
  color: #000;
  text-decoration: underline;
  margin-top: 10px;
}

.product-description {
  font-size: 12px;
  line-height: 1.6;
  margin-bottom: 30px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  opacity: 0.7;
}

.add-to-cart-btn {
  width: 100%;
  background: #000;
  color: white;
  border: none;
  padding: 18px;
  font-size: 14px;
  font-weight: bold;
  letter-spacing: 2px;
  cursor: pointer;
  margin-bottom: 30px;
  transition: background 0.2s;
}

.add-to-cart-btn:hover {
  background: #333;
}

.add-to-cart-btn:disabled {
  background: #ccc;
  cursor: not-allowed;
}

.delivery-info {
  margin-bottom: 40px;
  padding-bottom: 20px;
  border-bottom: 1px solid #eee;
}

.delivery-info p {
  font-size: 12px;
  letter-spacing: 1px;
  margin: 0;
  color: #666;
}

.product-accordion {
  border-top: 1px solid #eee;
}

.accordion-item {
  border-bottom: 1px solid #eee;
}

.accordion-item summary {
  padding: 20px 0;
  font-size: 12px;
  font-weight: bold;
  letter-spacing: 1px;
  cursor: pointer;
  list-style: none;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.accordion-item summary::-webkit-details-marker {
  display: none;
}

.accordion-content {
  padding-bottom: 20px;
  font-size: 14px;
  line-height: 1.6;
  color: #666;
}

/* Mobile Responsive */
@media (max-width: 768px) {
  .product-title{
    font-size: 18px !important;
  }
  .product-price{
    font-size: 18px !important;
  }
  .product-container {
    
    padding-left: 15px;
    padding-right: 15px;
  }
  
  .product-layout {
    flex-direction: column;
    gap: 30px;
  }
  .carousel-slide img {
    width: 100dvw;
  }
  .product-images,
  .product-details {
    max-width: 100%;
  }
  
  .carousel-slide img {
    max-height: 500px;
  }
}

@media (max-width: 480px) {
  .product-container {
    padding-top: 80px;
    padding-left: 10px;
    padding-right: 10px;
  }
  
  .product-title {
    font-size: 12px;
  }
  
  .product-price {
    font-size: 9px;
  }
  
  .carousel-slide img {
    max-height: 400px;
  }
  .compare{
    margin: 0 !important;
    opacity: 0.5;
  text-decoration: line-through;
    scale: 0.8;
    transform-origin: left;
  }
}
</style>

<div class="product-container">
  {% comment %} Debug: Check if product exists {% endcomment %}
  {% unless product %}
    <div style="padding: 20px; background: #f0f0f0; margin: 20px;">
      <h2>Debug: No product data found</h2>
      <p>This template requires a product object to display content.</p>
    </div>
  {% endunless %}

  <div class="product-layout">
    <!-- Product Images Carousel -->
    <div class="product-images">
      <div class="carousel">
        <div class="carousel-track">
          {% if product.images.size > 0 %}
            {% for image in product.images %}
              <div class="carousel-slide">
                <img src="{{ image | img_url: '800x800' }}" alt="{{ image.alt | escape }}">
              </div>
            {% endfor %}
          {% else %}
            <!-- Added fallback image for testing -->
            <div class="carousel-slide">
              <img src="https://via.placeholder.com/600x700/f0f0f0/000000?text=Product+Image" alt="Product Image">
            </div>
          {% endif %}
        </div>
        {% if product.images.size > 1 %}
          <div class="carousel-indicators"></div>
        {% endif %}
      </div>
    </div>

    <!-- Product Details -->
    <div class="product-details">
      <!-- Added fallback content for testing -->
      <h1 class="product-title">{{ product.title | default: 'JOE OVER-THE-KNEE BOOTS IN SMOOTH LEATHER' }}</h1>
      <p class="product-price compare">{{ product.compare_at_price| money | default: '$4,500.00' }}</p>
      <p class="product-price">{{ product.price | money | default: '$4,500.00' }}</p>
      
      {% if product.variants.first.option1 %}
        <div class="product-color">
          <span class="color-label">{{ product.options_with_values[0].name | upcase | default: 'COLOR' }}</span>
          <span class="color-value">{{ product.variants.first.option1 | upcase | default: 'BLACK' }}</span>
        </div>
      {% else %}
        <!-- Added fallback color section -->
        <div class="product-color">
          <span class="color-label">COLOR</span>
          <span class="color-value">BLACK</span>
        </div>
      {% endif %}

      <form action="/cart/add" method="post" enctype="multipart/form-data" class="product-form">
        {% if product.variants.size > 1 %}
          <div class="size-selector">
            <label>{{ product.options_with_values[1].name | upcase | default: 'SIZE' }}</label>
            <div class="size-buttons">
              {% for variant in product.variants %}
                <button type="button" 
                        class="size-button {% if variant == product.selected_or_first_available_variant %}active{% endif %}" 
                        data-variant-id="{{ variant.id }}"
                        {% unless variant.available %}disabled{% endunless %}>
                  {{ variant.title}}
                </button>
              {% endfor %}
            </div>
            <input type="hidden" name="id" id="selected-variant" value="{{ product.selected_or_first_available_variant.id }}">
            <a href="#" class="size-guide">SIZE GUIDE ></a>
          </div>
        {% else %}
          <!-- Added fallback size selector for testing -->
          <div class="size-selector">
            <label>YSL SIZE</label>
            <div class="size-buttons">
              <button type="button" class="size-button active" data-variant-id="test">43</button>
              <button type="button" class="size-button" data-variant-id="test2">44</button>
              <button type="button" class="size-button" data-variant-id="test3">45</button>
            </div>
            <input type="hidden" name="id" id="selected-variant" value="{{ product.selected_or_first_available_variant.id | default: 'test' }}">
            <a href="#" class="size-guide">SIZE GUIDE ></a>
          </div>
        {% endif %}

        <div class="product-description">
          {{ product.description | default: 'OVER-THE-KNEE BOOTS WITH A SQUARED MOC TOE, STACKED HEEL, AND ADJUSTABLE BUCKLE AT THE THIGH.' }}
        </div>

        <button type="submit" class="add-to-cart-btn" {% unless product.available %}disabled{% endunless %}>
          {% if product.available %}ADD TO CART{% else %}ADD TO CART{% endif %}
        </button>
      </form>

      <div class="delivery-info">
        <p>AVERAGE DELIVERY TIME: 1-6 WORKING DAYS</p>
      </div>

      <div class="product-accordion">
        <details class="accordion-item">
          <summary>MORE DETAILS ></summary>
          <div class="accordion-content">
            <p>Additional product details and specifications.</p>
          </div>
        </details>

        <details class="accordion-item">
          <summary>FIND IN STORE ></summary>
          <div class="accordion-content">
            <p>Store locator and availability information.</p>
          </div>
        </details>

        <details class="accordion-item">
          <summary>COMPLIMENTARY SHIPPING AND RETURNS ></summary>
          <div class="accordion-content">
            <p>Free shipping and returns policy details.</p>
          </div>
        </details>

        <details class="accordion-item">
          <summary>CUSTOMER SERVICE ></summary>
          <div class="accordion-content">
            <p>Contact information and support details.</p>
          </div>
        </details>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const sizeButtons = document.querySelectorAll('.size-button');
  const selectedVariantInput = document.getElementById('selected-variant');
  
  sizeButtons.forEach(button => {
    button.addEventListener('click', function() {
      if (this.disabled) return;
      
      // Remove active class from all buttons
      sizeButtons.forEach(btn => btn.classList.remove('active'));
      
      // Add active class to clicked button
      this.classList.add('active');
      
      // Update hidden input with selected variant ID
      selectedVariantInput.value = this.dataset.variantId;
    });
  });

  // Existing carousel code
  const track = document.querySelector('.carousel-track');
  const slides = Array.from(track.children);
  const indicators = document.querySelector('.carousel-indicators');
  let currentIndex = 0;

  if (slides.length > 1) {
    // Create indicators
    slides.forEach((_, i) => {
      const dot = document.createElement('div');
      if(i === 0) dot.classList.add('active');
      dot.addEventListener('click', () => goToSlide(i));
      indicators.appendChild(dot);
    });

    // Move to slide
    function goToSlide(index) {
      track.style.transform = `translateX(-${index * 100}%)`;
      indicators.querySelector('.active').classList.remove('active');
      indicators.children[index].classList.add('active');
      currentIndex = index;
    }

    // Keyboard navigation
    document.addEventListener('keydown', e => {
      if(e.key === 'ArrowRight') nextSlide();
      if(e.key === 'ArrowLeft') prevSlide();
    });

    function nextSlide() { goToSlide((currentIndex + 1) % slides.length); }
    function prevSlide() { goToSlide((currentIndex - 1 + slides.length) % slides.length); }

    // Mobile swipe
    let startX = 0;
    track.addEventListener('touchstart', e => startX = e.touches[0].clientX);
    track.addEventListener('touchend', e => {
      const endX = e.changedTouches[0].clientX;
      if(endX - startX > 50) prevSlide();
      else if(startX - endX > 50) nextSlide();
    });
  }
});
</script>
